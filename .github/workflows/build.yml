name: Apply

on:
  push:
    branches:
      - main
    # Don't build a new AMI if any of these files are the only changes
    paths-ignore:
      - Pipfile
      - Pipfile.lock
      - .github/**
      - README.md
      - Makefile
      - LICENSE
      - .gitignore

jobs:
  packer:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install Project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          sudo apt-get update && sudo apt-get install -y packer

      - name: Use Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install Library Dependencies
        run: |
          pipenv install --dev
          pipenv run ansible-galaxy role install --force-with-deps --role-file packer/ansible/requirements.yml
          pipenv run ansible-galaxy collection install --force-with-deps --requirements-file packer/ansible/requirements.yml

      - name: Packer Build
        run: |
          echo "${{ secrets.VAULT_PASS }}" > /home/runner/work/_temp/.vaultpass
          ANSIBLE_VAULT_PASSWORD_FILE=/home/runner/work/_temp/.vaultpass pipenv run packer build packer/wiki.pkr.hcl
        env:
          AWS_MAX_ATTEMPTS: 90
          AWS_POLL_DELAY_SECONDS: 60
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    needs: packer
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.14.5
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Init
        run: terraform init
        working-directory: terraform

      - name: Apply
        run: terraform apply -auto-approve
        working-directory: terraform
